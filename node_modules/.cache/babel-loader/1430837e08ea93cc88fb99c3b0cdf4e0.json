{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/tic-tac-toe-joey-ronnie/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Square from './components/Square';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState(0);\n\n  const checkTurn = index => {\n    //conditional statement to check if a player one\n    if (calculateWinner(squares) !== null) {\n      //conditional state to display the right player that one \n      const winner = calculateWinner(squares) === \"X\" ? \"Player One(X) won\" : \"Player Two(O) won\";\n      alert(winner);\n    } else if (calculateWinner(squares) === null && turn > 8) {\n      alert(\"Tie Game!\");\n    } else if (squares[index] === null) {\n      // places an X if its player one and an O if its player 2\n      const current = turn % 2 === 0 ? \"X\" : \"O\"; // Updating the data state\n\n      squares[index] = current; //setting the current square that was clicked on to either an X or an O\n\n      setSquares[index] = current; // Adding 1 to count to switch turns \n\n      setTurn(turn + 1);\n    }\n  };\n\n  useEffect(() => {\n    checkTurn();\n  }, [squares, turn]);\n\n  const playersTurn = turn => {\n    if (turn % 2 === 0) {\n      return \"Its players 1 (X) turn\";\n    } else if (turn % 2 !== 0) return \"Its players 2 ()\";\n  }; //the function that was given to check whether one player got 3 squares in a row \n\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  } //funtion to reset game board\n\n\n  const resetGame = () => {\n    setSquares(Array(9).fill(null));\n    setTurn(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tic Tac Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TicTacBoard\",\n        children: [squares.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(Square, {\n            Key: index,\n            value: value,\n            index: index,\n            checkTurn: checkTurn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"myButton\",\n          onClick: resetGame,\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"rHcxNHMxB6JX1z/jwLllDXFZ4uA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Square","App","squares","setSquares","Array","fill","turn","setTurn","checkTurn","index","calculateWinner","winner","alert","current","playersTurn","lines","i","length","a","b","c","resetGame","map","value"],"sources":["/Users/learnacademy/Desktop/tic-tac-toe-joey-ronnie/src/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react'\nimport Square from './components/Square'\nimport './App.css'\n\nconst App = () => {\n  const [squares, setSquares] = useState(Array(9).fill(null))\n  const [turn, setTurn] = useState(0)\n  \n  const checkTurn = (index) => {\n    //conditional statement to check if a player one\n    if(calculateWinner(squares) !== null){\n      //conditional state to display the right player that one \n     const winner = calculateWinner(squares) === \"X\" ? \"Player One(X) won\" : \"Player Two(O) won\"\n      alert(winner)\n    }else if(calculateWinner(squares) === null &&  turn >8){\n      alert(\"Tie Game!\")\n    }else if (squares[index] === null) {\n      // places an X if its player one and an O if its player 2\n      const current = turn  % 2 === 0 ? \"X\" : \"O\"\n      // Updating the data state\n      squares[index] = current;\n      //setting the current square that was clicked on to either an X or an O\n      setSquares[index] = current\n      // Adding 1 to count to switch turns \n      setTurn(turn+1)\n    \n  }\n}\nuseEffect(()=>{\ncheckTurn()\n\n},[squares, turn])\n\nconst playersTurn = (turn) => {\n  if(turn%2 ===0){\n    return \"Its players 1 (X) turn\"\n  }else if(turn%2 !==0)\n  return \"Its players 2 ()\"\n\n}\n//the function that was given to check whether one player got 3 squares in a row \nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n//funtion to reset game board\nconst resetGame = () => {\n  setSquares(Array(9).fill(null))\n  setTurn(0)\n}\n  return (\n    <>\n    <body>\n      <h1>Tic Tac Toe</h1>\n      <div className=\"TicTacBoard\">\n      {squares.map((value,index)=>{\n        return(\n          <Square \n          Key={index}\n          value={value}\n          index={index}\n          checkTurn={checkTurn}\n           />\n        )\n      })}\n       <button class=\"myButton\" onClick={resetGame}>Reset Game</button>\n     </div>\n     </body>\n    </>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}